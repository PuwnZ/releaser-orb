version: 2.1
description: An orb for programmatic release, based on your gitflow

executors:
  github:
    docker:
      - image: cibuilds/github:0.10

commands:
  before:
    parameters:
      email:
        type: string
      username:
        type: string
    steps:
      - run: |
          git config --global user.email "<< parameters.email >>"
          git config --global user.name "<< parameters.username >>"
          echo CURRENT_VERSION_TAG=$(git describe --tags $(git rev-list --tags --max-count=1)) >> .env
          echo MINOR_BRANCH=$(git branch --all | grep remotes/origin/release | sed -e "s/[ ]*remotes\/origin\///g") >> .env
          echo CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD) >> .env
  after:
    steps:
      - run: |
          source .env
          git checkout master && git merge --no-ff --no-edit $CURRENT_BRANCH && git tag $NEW_VERSION_TAG
          git checkout develop && git pull --rebase && git merge --no-ff --no-edit $CURRENT_BRANCH
          git branch -D $CURRENT_BRANCH
          git push --all && git push origin :$CURRENT_BRANCH && git push --tags
  execute_patch:
    parameters:
      email:
        type: string
        default: circleci@sandbox.fr
      username:
        type: string
        default: ${CIRCLE_USERNAME}
    steps:
      - checkout
      - before:
          email: << parameters.email >>
          username: << parameters.username >>
      - run: |
          source .env
          echo NEW_VERSION_TAG=$(echo $CURRENT_VERSION_TAG | sed "s/$(echo $CURRENT_VERSION_TAG | cut -d"." -f3)$/$(expr $(echo $CURRENT_VERSION_TAG | cut -d"." -f3) + 1)/") >> .env
          git checkout $MINOR_BRANCH && git merge --no-ff --no-edit $CURRENT_BRANCH
      - after
  execute_minor:
    parameters:
      email:
        type: string
        default: circleci@sandbox.fr
      username:
        type: string
        default: ${CIRCLE_USERNAME}
    steps:
      - checkout
      - before:
          email: << parameters.email >>
          username: << parameters.username >>
      - run: |
          source .env
          version=$(echo $MINOR_BRANCH | sed -e "s/release\///g")
          echo NEW_VERSION_TAG=$(echo $version) >> .env
          NEW_VERSION_TAG=$(echo $version | sed -E "s/^([0-9]+\.)$(echo $version | cut -d"." -f2)[.0-9]+/\1$(expr $(echo $version | cut -d"." -f2) + 1).0/")
          git checkout develop && git checkout -b release/$NEW_VERSION_TAG
      - after

jobs:
  create_patch_tag:
    executor: github
    steps:
      - execute_patch

  create_minor_tag:
    executor: github
    steps:
      - execute_minor
